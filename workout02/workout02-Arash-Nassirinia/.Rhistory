growing_annuity(contrib = 200, rate = 0.05, growth = 0.03, years = 2)
growing_annuity(contrib = 200, rate = 0.05, growth = 0.03, years = 10)
n_three_answer<-growing_annuity(contrib=200,rate=.05,growth=.03,years=10)
"You would expect to get:"
n_three_answer
modalities<-data.frame(year=c(0:10),no_contrib=c(0:10),fixed_contrib=c(0:10),growing_contrib=c(0:10))
for (i in c(1:11)) {
modalities[i,2]=future_value(amount = 1000, rate = 0.05, years = i-1)
}
for (i in c(1:11)) {
modalities[i,3]=future_value(amount = 1000, rate = 0.05, years = i-1)+annuity(contrib = 200, rate = 0.05, years = i-1)
}
for (i in c(1:11)) {
modalities[i,4]=future_value(amount = 1000, rate = 0.05, years = i-1)+growing_annuity(contrib = 200, rate = 0.05, growth = 0.03, years = i-1)
}
modalities
ggplot(data=modalities)+
geom_line(aes(x=year, y=no_contrib,color="no_contrib"), show.legend = T) +
geom_line(aes(x=year, y=fixed_contrib,color="fixed_contrib"), show.legend = T) +
geom_line(aes(x=year, y=growing_contrib,color="growing_contrib"), show.legend = T) +
labs(x="Year",y="Dollars ($)") +
ggtitle("Saving Timeline Graphs")
savings_function<-function(am,rat,con,gr) {
no_cont <- rep(0,21)
fixed_cont <- rep(0,21)
growing_cont <- rep(0,21)
for (i in c(1:21)) {
no_cont[i]<- future_value(amount = am, rate = rat, years = i)
fixed_cont[i]<- future_value(amount = am, rate = rat, years = i) +
annuity(contrib = con, rate = rat, years = i)
growing_cont[i]<- future_value(amount = am, rate = rat, years = i) +
growing_annuity(contrib = con, rate = rat, growth = gr, years = i)
}
return(data.frame(no_cont,fixed_cont,growing_cont))
}
regular_savings<-savings_function(10000,.001,2000,.04)
regular_savings<-mutate(regular_savings,savings="regular savings",years=c(0:20))
high_yield_savings<-savings_function(10000,.0225,2000,.04)
high_yield_savings<-mutate(high_yield_savings,savings="high-yield savings",years=c(0:20))
index_fund<-savings_function(10000,.065,2000,.04)
index_fund<-mutate(index_fund,savings="index fund",years=c(0:20))
balances<-rbind(regular_savings,high_yield_savings,index_fund)
balances
all<-
ggplot(data=balances)+
geom_line(aes(x=years, y=no_cont,color="no_contrib"), show.legend = T) +
geom_line(aes(x=years, y=fixed_cont,color="fixed_contrib"), show.legend = T) +
geom_line(aes(x=years, y=growing_cont,color="growing_contrib"), show.legend = T) +
labs(color='modality') +
labs(x="Year",y="Balance") +
facet_wrap(~savings) +
theme_bw()
all
savings_function<-function(am,rat,con,gr) {
no_cont <- rep(0,21)
fixed_cont <- rep(0,21)
growing_cont <- rep(0,21)
for (i in c(1:21)) {
no_cont[i]<- future_value(amount = am, rate = rat, years = i-1)
fixed_cont[i]<- future_value(amount = am, rate = rat, years = i-1) +
annuity(contrib = con, rate = rat, years = i-1)
growing_cont[i]<- future_value(amount = am, rate = rat, years = i-1) +
growing_annuity(contrib = con, rate = rat, growth = gr, years = i-1)
}
return(data.frame(no_cont,fixed_cont,growing_cont))
}
regular_savings<-savings_function(10000,.001,2000,.04)
regular_savings<-mutate(regular_savings,savings="regular savings",years=c(0:20))
high_yield_savings<-savings_function(10000,.0225,2000,.04)
high_yield_savings<-mutate(high_yield_savings,savings="high-yield savings",years=c(0:20))
index_fund<-savings_function(10000,.065,2000,.04)
index_fund<-mutate(index_fund,savings="index fund",years=c(0:20))
balances<-rbind(regular_savings,high_yield_savings,index_fund)
balances
all<-
ggplot(data=balances)+
geom_line(aes(x=years, y=no_cont,color="no_contrib"), show.legend = T) +
geom_line(aes(x=years, y=fixed_cont,color="fixed_contrib"), show.legend = T) +
geom_line(aes(x=years, y=growing_cont,color="growing_contrib"), show.legend = T) +
labs(color='modality') +
labs(x="Year",y="Balance") +
facet_wrap(~savings) +
theme_bw()
all
all<-
ggplot(data=balances)+
geom_line(aes(x=years, y=no_cont,color="no_contrib"), show.legend = T) +
geom_line(aes(x=years, y=fixed_cont,color="fixed_contrib"), show.legend = T) +
geom_line(aes(x=years, y=growing_cont,color="growing_contrib"), show.legend = T) +
labs(color='modality') +
scale_y_continuous(limits=c(0, 12000))
labs(x="Year",y="Balance") +
facet_wrap(~savings) +
theme_bw()
all
all<-
ggplot(data=balances)+
geom_line(aes(x=years, y=no_cont,color="no_contrib"), show.legend = T) +
geom_point(aes(x=years, y=no_cont,color="no_contrib")) +
geom_line(aes(x=years, y=fixed_cont,color="fixed_contrib"), show.legend = T) +
geom_point(aes(x=years, y=fixed_cont,color="fixed_contrib")) +
geom_line(aes(x=years, y=growing_cont,color="growing_contrib"), show.legend = T) +
geom_point(aes(x=years, y=growing_cont,color="growing_contrib")) +
labs(color='modality') +
labs(x="Year",y="Balance") +
facet_wrap(~savings) +
theme_bw()
all
all<-
ggplot(data=balances)+
geom_line(aes(x=years, y=no_cont,color="no_contrib"), show.legend = T) +
geom_point(aes(x=years, y=no_cont,color="no_contrib")) +
geom_line(aes(x=years, y=fixed_cont,color="fixed_contrib"), show.legend = T) +
geom_point(aes(x=years, y=fixed_cont,color="fixed_contrib")) +
geom_line(aes(x=years, y=growing_cont,color="growing_contrib"), show.legend = T) +
geom_point(aes(x=years, y=growing_cont,color="growing_contrib")) +
labs(color='modality') +
labs(x="Year",y="Balance") +
facet_wrap(~savings) +
scale_y_continuous(breaks = c(30000,60000,90000)
theme_bw()
all
all<-
ggplot(data=balances)+
geom_line(aes(x=years, y=no_cont,color="no_contrib"), show.legend = T) +
geom_point(aes(x=years, y=no_cont,color="no_contrib")) +
geom_line(aes(x=years, y=fixed_cont,color="fixed_contrib"), show.legend = T) +
geom_point(aes(x=years, y=fixed_cont,color="fixed_contrib")) +
geom_line(aes(x=years, y=growing_cont,color="growing_contrib"), show.legend = T) +
geom_point(aes(x=years, y=growing_cont,color="growing_contrib")) +
labs(color='modality') +
labs(x="Year",y="Balance") +
facet_wrap(~savings) +
scale_y_continuous(breaks = c(30000,60000,90000)) +
theme_bw()
all
#' @title savings_function
#' @description creates a data data table of savings values for each of 20 years
#' @param am initial invested amount
#' @param rat annual rate of return
#' @param con contributed amount
#' @param gr annual growth rate
#' @return savings values for no contribution, fixed contribution, and growing contribution for each of 20 years in a data frame
savings_function<-function(am,rat,con,gr) {
no_cont <- rep(0,20)
fixed_cont <- rep(0,20)
growing_cont <- rep(0,20)
for (i in c(1:20)) {
no_cont[i]<- future_value(amount = am, rate = rat, years = i)
fixed_cont[i]<- future_value(amount = am, rate = rat, years = i) +
annuity(contrib = con, rate = rat, years = i)
growing_cont[i]<- future_value(amount = am, rate = rat, years = i) +
growing_annuity(contrib = con, rate = rat, growth = gr, years = i)
}
return(data.frame(no_cont,fixed_cont,growing_cont))
}
regular_savings<-savings_function(10000,.001,2000,.04)
regular_savings<-mutate(regular_savings,savings="regular savings",years=c(1:20))
high_yield_savings<-savings_function(10000,.0225,2000,.04)
high_yield_savings<-mutate(high_yield_savings,savings="high-yield savings",years=c(1:20))
index_fund<-savings_function(10000,.065,2000,.04)
index_fund<-mutate(index_fund,savings="index fund",years=c(1:20))
balances<-rbind(regular_savings,high_yield_savings,index_fund)
balances
all<-
ggplot(data=balances)+
geom_line(aes(x=years, y=no_cont,color="no_contrib"), show.legend = T) +
geom_point(aes(x=years, y=no_cont,color="no_contrib")) +
geom_line(aes(x=years, y=fixed_cont,color="fixed_contrib"), show.legend = T) +
geom_point(aes(x=years, y=fixed_cont,color="fixed_contrib")) +
geom_line(aes(x=years, y=growing_cont,color="growing_contrib"), show.legend = T) +
geom_point(aes(x=years, y=growing_cont,color="growing_contrib")) +
labs(color='modality') +
labs(x="Year",y="Balance") +
facet_wrap(~savings) +
scale_y_continuous(breaks = c(30000,60000,90000)) +
theme_bw()
all
knitr::opts_chunk$set(echo = TRUE, error=TRUE)
library(ggplot2)
library(dplyr)
#' @title future_value
#' @description calculates future value of an investment
#' @param amount (initial invested amount)
#' @param rate (annual rate of return)
#' @param years (number of years)
#' @return future value of amount
future_value<-function(amount,rate,years) {
return(amount*(1+rate)^years)
}
future_value(amount = 100, rate = 0.05, years = 1)
future_value(amount = 500, rate = 0.05, years = 5)
future_value(amount = 1000, rate = 0.05, years = 10)
n_one_answer<-future_value(amount=1000,rate=.05,years=10)
"You would expect to get:"
n_one_answer
#' @title annuity
#' @description computes the future value of annuity
#' @param contrib (contributed amount)
#' @param rate (annual rate of return)
#' @param years (number of years)
#' @return future value of annuity (using the 3 different parameters)
annuity<-function(contrib,rate,years) {
return (contrib*(((1+rate)^years-1)/rate))
}
annuity(contrib = 200, rate = 0.05, years = 1)
annuity(contrib = 200, rate = 0.05, years = 2)
annuity(contrib = 200, rate = 0.05, years = 10)
n_two_answer<-annuity(contrib=200,rate=.05,years=10)
"You would expect to get:"
n_two_answer
#' @title growing_annuity
#' @description computes the future value of growing annuity
#' @param contrib (contributed amount)
#' @param rate (annual rate of return)
#' @param growth (annual growth rate)
#' @param years (number of years)
#' @return future value of growing annuity (using the 4 different parameters)
growing_annuity<-function(contrib,rate,growth,years) {
numerator<-(1+rate)^years-(1+growth)^years
denominator<-rate-growth
return (contrib*(numerator/denominator))
}
growing_annuity(contrib = 200, rate = 0.05, growth = 0.03, years = 1)
growing_annuity(contrib = 200, rate = 0.05, growth = 0.03, years = 2)
growing_annuity(contrib = 200, rate = 0.05, growth = 0.03, years = 10)
n_three_answer<-growing_annuity(contrib=200,rate=.05,growth=.03,years=10)
"You would expect to get:"
n_three_answer
modalities<-data.frame(year=c(0:10),no_contrib=c(0:10),fixed_contrib=c(0:10),growing_contrib=c(0:10))
for (i in c(1:11)) {
modalities[i,2]=future_value(amount = 1000, rate = 0.05, years = i-1)
}
for (i in c(1:11)) {
modalities[i,3]=future_value(amount = 1000, rate = 0.05, years = i-1)+annuity(contrib = 200, rate = 0.05, years = i-1)
}
for (i in c(1:11)) {
modalities[i,4]=future_value(amount = 1000, rate = 0.05, years = i-1)+growing_annuity(contrib = 200, rate = 0.05, growth = 0.03, years = i-1)
}
modalities
ggplot(data=modalities)+
geom_line(aes(x=year, y=no_contrib,color="no_contrib"), show.legend = T) +
geom_line(aes(x=year, y=fixed_contrib,color="fixed_contrib"), show.legend = T) +
geom_line(aes(x=year, y=growing_contrib,color="growing_contrib"), show.legend = T) +
labs(x="Year",y="Dollars ($)") +
ggtitle("Saving Timeline Graphs")
#' @title savings_function
#' @description creates a data data table of savings values for each of 20 years
#' @param am initial invested amount
#' @param rat annual rate of return
#' @param con contributed amount
#' @param gr annual growth rate
#' @return savings values for no contribution, fixed contribution, and growing contribution for each of 20 years in a data frame
savings_function<-function(am,rat,con,gr) {
no_cont <- rep(0,21)
fixed_cont <- rep(0,21)
growing_cont <- rep(0,21)
for (i in c(1:21)) {
no_cont[i]<- future_value(amount = am, rate = rat, years = i-1)
fixed_cont[i]<- future_value(amount = am, rate = rat, years = i-1) +
annuity(contrib = con, rate = rat, years = i-1)
growing_cont[i]<- future_value(amount = am, rate = rat, years = i-1) +
growing_annuity(contrib = con, rate = rat, growth = gr, years = i-1)
}
return(data.frame(no_cont,fixed_cont,growing_cont))
}
regular_savings<-savings_function(10000,.001,2000,.04)
regular_savings<-mutate(regular_savings,savings="regular savings",years=c(0:20))
high_yield_savings<-savings_function(10000,.0225,2000,.04)
high_yield_savings<-mutate(high_yield_savings,savings="high-yield savings",years=c(0:20))
index_fund<-savings_function(10000,.065,2000,.04)
index_fund<-mutate(index_fund,savings="index fund",years=c(0:20))
balances<-rbind(regular_savings,high_yield_savings,index_fund)
balances
all<-
ggplot(data=balances)+
geom_line(aes(x=years, y=no_cont,color="no_contrib"), show.legend = T) +
geom_point(aes(x=years, y=no_cont,color="no_contrib")) +
geom_line(aes(x=years, y=fixed_cont,color="fixed_contrib"), show.legend = T) +
geom_point(aes(x=years, y=fixed_cont,color="fixed_contrib")) +
geom_line(aes(x=years, y=growing_cont,color="growing_contrib"), show.legend = T) +
geom_point(aes(x=years, y=growing_cont,color="growing_contrib")) +
labs(color='modality') +
labs(x="Year",y="Balance") +
facet_wrap(~savings) +
theme_bw()
all
knitr::opts_chunk$set(echo = TRUE, error=TRUE)
library(ggplot2)
library(dplyr)
#' @title future_value
#' @description calculates future value of an investment
#' @param amount (initial invested amount)
#' @param rate (annual rate of return)
#' @param years (number of years)
#' @return future value of amount
future_value<-function(amount,rate,years) {
return(amount*(1+rate)^years)
}
future_value(amount = 100, rate = 0.05, years = 1)
future_value(amount = 500, rate = 0.05, years = 5)
future_value(amount = 1000, rate = 0.05, years = 10)
n_one_answer<-future_value(amount=1000,rate=.05,years=10)
"You would expect to get:"
n_one_answer
#' @title annuity
#' @description computes the future value of annuity
#' @param contrib (contributed amount)
#' @param rate (annual rate of return)
#' @param years (number of years)
#' @return future value of annuity (using the 3 different parameters)
annuity<-function(contrib,rate,years) {
return (contrib*(((1+rate)^years-1)/rate))
}
annuity(contrib = 200, rate = 0.05, years = 1)
annuity(contrib = 200, rate = 0.05, years = 2)
annuity(contrib = 200, rate = 0.05, years = 10)
n_two_answer<-annuity(contrib=200,rate=.05,years=10)
"You would expect to get:"
n_two_answer
#' @title growing_annuity
#' @description computes the future value of growing annuity
#' @param contrib (contributed amount)
#' @param rate (annual rate of return)
#' @param growth (annual growth rate)
#' @param years (number of years)
#' @return future value of growing annuity (using the 4 different parameters)
growing_annuity<-function(contrib,rate,growth,years) {
numerator<-(1+rate)^years-(1+growth)^years
denominator<-rate-growth
return (contrib*(numerator/denominator))
}
growing_annuity(contrib = 200, rate = 0.05, growth = 0.03, years = 1)
growing_annuity(contrib = 200, rate = 0.05, growth = 0.03, years = 2)
growing_annuity(contrib = 200, rate = 0.05, growth = 0.03, years = 10)
n_three_answer<-growing_annuity(contrib=200,rate=.05,growth=.03,years=10)
"You would expect to get:"
n_three_answer
modalities<-data.frame(year=c(0:10),no_contrib=c(0:10),fixed_contrib=c(0:10),growing_contrib=c(0:10))
for (i in c(1:11)) {
modalities[i,2]=future_value(amount = 1000, rate = 0.05, years = i-1)
}
for (i in c(1:11)) {
modalities[i,3]=future_value(amount = 1000, rate = 0.05, years = i-1)+annuity(contrib = 200, rate = 0.05, years = i-1)
}
for (i in c(1:11)) {
modalities[i,4]=future_value(amount = 1000, rate = 0.05, years = i-1)+growing_annuity(contrib = 200, rate = 0.05, growth = 0.03, years = i-1)
}
modalities
ggplot(data=modalities)+
geom_line(aes(x=year, y=no_contrib,color="no_contrib"), show.legend = T) +
geom_line(aes(x=year, y=fixed_contrib,color="fixed_contrib"), show.legend = T) +
geom_line(aes(x=year, y=growing_contrib,color="growing_contrib"), show.legend = T) +
labs(x="Year",y="Dollars ($)") +
ggtitle("Saving Timeline Graphs")
#' @title savings_function
#' @description creates a data data table of savings values for each of 20 years
#' @param am initial invested amount
#' @param rat annual rate of return
#' @param con contributed amount
#' @param gr annual growth rate
#' @return savings values for no contribution, fixed contribution, and growing contribution for each of 20 years in a data frame
savings_function<-function(am,rat,con,gr) {
no_cont <- rep(0,21)
fixed_cont <- rep(0,21)
growing_cont <- rep(0,21)
for (i in c(1:21)) {
no_cont[i]<- future_value(amount = am, rate = rat, years = i)
fixed_cont[i]<- future_value(amount = am, rate = rat, years = i) +
annuity(contrib = con, rate = rat, years = i-1)
growing_cont[i]<- future_value(amount = am, rate = rat, years = i) +
growing_annuity(contrib = con, rate = rat, growth = gr, years = i-1)
}
return(data.frame(no_cont,fixed_cont,growing_cont))
}
regular_savings<-savings_function(10000,.001,2000,.04)
regular_savings<-mutate(regular_savings,savings="regular savings",years=c(0:20))
high_yield_savings<-savings_function(10000,.0225,2000,.04)
high_yield_savings<-mutate(high_yield_savings,savings="high-yield savings",years=c(0:20))
index_fund<-savings_function(10000,.065,2000,.04)
index_fund<-mutate(index_fund,savings="index fund",years=c(0:20))
balances<-rbind(regular_savings,high_yield_savings,index_fund)
balances
all<-
ggplot(data=balances)+
geom_line(aes(x=years, y=no_cont,color="no_contrib"), show.legend = T) +
geom_point(aes(x=years, y=no_cont,color="no_contrib")) +
geom_line(aes(x=years, y=fixed_cont,color="fixed_contrib"), show.legend = T) +
geom_point(aes(x=years, y=fixed_cont,color="fixed_contrib")) +
geom_line(aes(x=years, y=growing_cont,color="growing_contrib"), show.legend = T) +
geom_point(aes(x=years, y=growing_cont,color="growing_contrib")) +
labs(color='modality') +
labs(x="Year",y="Balance") +
facet_wrap(~savings) +
theme_bw()
all
knitr::opts_chunk$set(echo = TRUE, error=TRUE)
library(ggplot2)
library(dplyr)
#' @title future_value
#' @description calculates future value of an investment
#' @param amount (initial invested amount)
#' @param rate (annual rate of return)
#' @param years (number of years)
#' @return future value of amount
future_value<-function(amount,rate,years) {
return(amount*(1+rate)^years)
}
future_value(amount = 100, rate = 0.05, years = 1)
future_value(amount = 500, rate = 0.05, years = 5)
future_value(amount = 1000, rate = 0.05, years = 10)
n_one_answer<-future_value(amount=1000,rate=.05,years=10)
"You would expect to get:"
n_one_answer
#' @title annuity
#' @description computes the future value of annuity
#' @param contrib (contributed amount)
#' @param rate (annual rate of return)
#' @param years (number of years)
#' @return future value of annuity (using the 3 different parameters)
annuity<-function(contrib,rate,years) {
return (contrib*(((1+rate)^years-1)/rate))
}
annuity(contrib = 200, rate = 0.05, years = 1)
annuity(contrib = 200, rate = 0.05, years = 2)
annuity(contrib = 200, rate = 0.05, years = 10)
n_two_answer<-annuity(contrib=200,rate=.05,years=10)
"You would expect to get:"
n_two_answer
#' @title growing_annuity
#' @description computes the future value of growing annuity
#' @param contrib (contributed amount)
#' @param rate (annual rate of return)
#' @param growth (annual growth rate)
#' @param years (number of years)
#' @return future value of growing annuity (using the 4 different parameters)
growing_annuity<-function(contrib,rate,growth,years) {
numerator<-(1+rate)^years-(1+growth)^years
denominator<-rate-growth
return (contrib*(numerator/denominator))
}
growing_annuity(contrib = 200, rate = 0.05, growth = 0.03, years = 1)
growing_annuity(contrib = 200, rate = 0.05, growth = 0.03, years = 2)
growing_annuity(contrib = 200, rate = 0.05, growth = 0.03, years = 10)
n_three_answer<-growing_annuity(contrib=200,rate=.05,growth=.03,years=10)
"You would expect to get:"
n_three_answer
modalities<-data.frame(year=c(0:10),no_contrib=c(0:10),fixed_contrib=c(0:10),growing_contrib=c(0:10))
for (i in c(1:11)) {
modalities[i,2]=future_value(amount = 1000, rate = 0.05, years = i-1)
}
for (i in c(1:11)) {
modalities[i,3]=future_value(amount = 1000, rate = 0.05, years = i-1)+annuity(contrib = 200, rate = 0.05, years = i-1)
}
for (i in c(1:11)) {
modalities[i,4]=future_value(amount = 1000, rate = 0.05, years = i-1)+growing_annuity(contrib = 200, rate = 0.05, growth = 0.03, years = i-1)
}
modalities
ggplot(data=modalities)+
geom_line(aes(x=year, y=no_contrib,color="no_contrib"), show.legend = T) +
geom_line(aes(x=year, y=fixed_contrib,color="fixed_contrib"), show.legend = T) +
geom_line(aes(x=year, y=growing_contrib,color="growing_contrib"), show.legend = T) +
labs(x="Year",y="Dollars ($)") +
ggtitle("Saving Timeline Graphs")
#' @title savings_function
#' @description creates a data data table of savings values for each of 20 years
#' @param am initial invested amount
#' @param rat annual rate of return
#' @param con contributed amount
#' @param gr annual growth rate
#' @return savings values for no contribution, fixed contribution, and growing contribution for each of 20 years in a data frame
savings_function<-function(am,rat,con,gr) {
no_cont <- rep(0,21)
fixed_cont <- rep(0,21)
growing_cont <- rep(0,21)
for (i in c(1:21)) {
no_cont[i]<- future_value(amount = am, rate = rat, years = i-1)
fixed_cont[i]<- future_value(amount = am, rate = rat, years = i-1) +
annuity(contrib = con, rate = rat, years = i-1)
growing_cont[i]<- future_value(amount = am, rate = rat, years = i-1) +
growing_annuity(contrib = con, rate = rat, growth = gr, years = i-1)
}
return(data.frame(no_cont,fixed_cont,growing_cont))
}
regular_savings<-savings_function(1000,.001,2000,.04)
regular_savings<-mutate(regular_savings,savings="regular savings",years=c(0:20))
high_yield_savings<-savings_function(1000,.0225,2000,.04)
high_yield_savings<-mutate(high_yield_savings,savings="high-yield savings",years=c(0:20))
index_fund<-savings_function(1000,.065,2000,.04)
index_fund<-mutate(index_fund,savings="index fund",years=c(0:20))
balances<-rbind(regular_savings,high_yield_savings,index_fund)
balances
all<-
ggplot(data=balances)+
geom_line(aes(x=years, y=no_cont,color="no_contrib"), show.legend = T) +
geom_point(aes(x=years, y=no_cont,color="no_contrib")) +
geom_line(aes(x=years, y=fixed_cont,color="fixed_contrib"), show.legend = T) +
geom_point(aes(x=years, y=fixed_cont,color="fixed_contrib")) +
geom_line(aes(x=years, y=growing_cont,color="growing_contrib"), show.legend = T) +
geom_point(aes(x=years, y=growing_cont,color="growing_contrib")) +
labs(color='modality') +
labs(x="Year",y="Balance") +
facet_wrap(~savings) +
theme_bw()
all
shiny::runApp('C:/Users/Arash N/Desktop/Berkeley/Stat 133/Labs/10/app')
runApp('C:/Users/Arash N/Desktop/Berkeley/Stat 133/Labs/10/app')
runApp('C:/Users/Arash N/Desktop/Berkeley/Stat 133/Labs/10/app')
runApp('C:/Users/Arash N/Desktop/Berkeley/Stat 133/Labs/10/app')
runApp('C:/Users/Arash N/Desktop/Berkeley/Stat 133/Labs/10/app')
runApp('C:/Users/Arash N/Desktop/Berkeley/Stat 133/Labs/10/app')
shiny::runApp('C:/Users/Arash N/Desktop/Berkeley/Stat 133/Assignments/workout02/workout02-Arash-Nassirinia')
